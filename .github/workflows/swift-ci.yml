name: Swift CI

on:
  push:
    branches: [ main, development ]
  pull_request:
    branches: [ main ]

jobs:
  swift-build:
    name: Swift Build on macOS
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
    
    - name: Show Xcode version
      run: xcodebuild -version
    
    - name: List project structure
      run: |
        echo "Repository structure:"
        find . -name "*.xcodeproj" -o -name "*.xcworkspace" | head -10
        echo ""
        echo "DesktopApp directory contents:"
        ls -la DesktopApp/ || echo "DesktopApp directory not found"
    
    - name: Build Xcode project
      working-directory: DesktopApp
      run: |
        echo "Building MacForge.xcodeproj..."
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild build \
            -project MacForge.xcodeproj \
            -scheme MacForge \
            -configuration Debug \
            -destination 'platform=macOS,arch=x86_64' \
            -derivedDataPath ./build \
            | xcpretty --color --simple || exit 1
          echo "Build completed successfully!"
        else
          echo "MacForge.xcodeproj not found!"
          exit 1
        fi
    
    - name: Run tests
      working-directory: DesktopApp
      run: |
        echo "Running tests..."
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild test \
            -project MacForge.xcodeproj \
            -scheme MacForge \
            -configuration Debug \
            -destination 'platform=macOS,arch=x86_64' \
            -derivedDataPath ./build \
            -enableCodeCoverage YES \
            | xcpretty --color --simple || exit 1
          echo "Tests completed successfully!"
        else
          echo "No tests to run"
        fi
      continue-on-error: true
    
    - name: Build Release
      working-directory: DesktopApp
      run: |
        echo "Building Release configuration..."
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild build \
            -project MacForge.xcodeproj \
            -scheme MacForge \
            -configuration Release \
            -destination 'platform=macOS,arch=x86_64' \
            -derivedDataPath ./build \
            | xcpretty --color --simple || exit 1
          echo "Release build completed successfully!"
        else
          echo "MacForge.xcodeproj not found!"
          exit 1
        fi
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: swift-build-artifacts
        path: DesktopApp/build/
        retention-days: 7

  swift-package:
    name: Swift Package Manager
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Select Xcode version
      run: sudo xcode-select -s /Applications/Xcode_15.0.app/Contents/Developer
    
    - name: Show Swift version
      run: swift --version
    
    - name: Check Swift package
      run: |
        echo "Checking Swift package structure..."
        if [ -f "Package.swift" ]; then
          swift package describe
        else
          echo "No Package.swift found - this is expected for an Xcode project"
        fi
    
    - name: Resolve dependencies
      run: |
        echo "Checking for Swift package dependencies..."
        if [ -f "Package.swift" ]; then
          swift package resolve
        else
          echo "No Swift package to resolve - this is expected for an Xcode project"
        fi
    
    - name: Build package
      run: |
        echo "Checking for Swift package build..."
        if [ -f "Package.swift" ]; then
          swift build
        else
          echo "No Swift package to build - this is expected for an Xcode project"
        fi
    
    - name: Run package tests
      run: |
        echo "Checking for Swift package tests..."
        if [ -f "Package.swift" ]; then
          swift test
        else
          echo "No Swift package tests to run - this is expected for an Xcode project"
        fi
