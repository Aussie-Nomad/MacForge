name: Build and Test MacForge

on:
  push:
    branches: [ main, dev, development ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-test:
    name: Build and Test MacForge
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Fetch full history for better debugging
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
    
    - name: Show Xcode version
      run: |
        echo "Xcode version:"
        xcodebuild -version
        echo ""
        echo "Available platforms:"
        xcodebuild -showBuildSettings -project DesktopApp/MacForge.xcodeproj | grep "SUPPORTED_PLATFORMS" || echo "No supported platforms found"
    
    - name: Show project structure
      run: |
        echo "Repository structure:"
        find . -name "*.xcodeproj" -o -name "*.xcworkspace" | head -10
        echo ""
        echo "DesktopApp directory contents:"
        ls -la DesktopApp/ || echo "DesktopApp directory not found"
        echo ""
        echo "MacForge project contents:"
        ls -la DesktopApp/MacForge/ || echo "MacForge directory not found"
    
    - name: List available schemes
      working-directory: DesktopApp
      run: |
        echo "Available schemes for MacForge.xcodeproj:"
        xcodebuild -project MacForge.xcodeproj -list || echo "Failed to list schemes"
        echo ""
        echo "Available configurations:"
        xcodebuild -project MacForge.xcodeproj -showBuildSettings | grep "CONFIGURATION" | head -5 || echo "No configurations found"
    
    - name: Clean build folder
      working-directory: DesktopApp
      run: |
        echo "Cleaning build folder..."
        xcodebuild clean -project MacForge.xcodeproj -scheme MacForge || echo "Clean completed (warnings are OK)"
    
    - name: Build project
      working-directory: DesktopApp
      run: |
        echo "Building MacForge project..."
        xcodebuild build \
          -project MacForge.xcodeproj \
          -scheme MacForge \
          -configuration Debug \
          -destination 'platform=macOS,arch=x86_64' \
          -derivedDataPath ./build \
          -showBuildTimingSummary \
          | xcpretty --color --simple || exit 1
        echo "Build completed successfully!"
    
    - name: Build project (Release)
      working-directory: DesktopApp
      run: |
        echo "Building MacForge project (Release configuration)..."
        xcodebuild build \
          -project MacForge.xcodeproj \
          -scheme MacForge \
          -configuration Release \
          -destination 'platform=macOS,arch=x86_64' \
          -derivedDataPath ./build \
          -showBuildTimingSummary \
          | xcpretty --color --simple || exit 1
        echo "Release build completed successfully!"
    
    - name: Run tests
      working-directory: DesktopApp
      run: |
        echo "Running MacForge tests..."
        xcodebuild test \
          -project MacForge.xcodeproj \
          -scheme MacForge \
          -configuration Debug \
          -destination 'platform=macOS,arch=x86_64' \
          -derivedDataPath ./build \
          -showBuildTimingSummary \
          -enableCodeCoverage YES \
          | xcpretty --color --simple || exit 1
        echo "Tests completed successfully!"
    
    - name: Archive project
      working-directory: DesktopApp
      run: |
        echo "Creating archive..."
        xcodebuild archive \
          -project MacForge.xcodeproj \
          -scheme MacForge \
          -configuration Release \
          -destination 'platform=macOS,arch=x86_64' \
          -archivePath ./build/MacForge.xcarchive \
          -derivedDataPath ./build \
          | xcpretty --color --simple || echo "Archive step completed with warnings"
        echo "Archive step completed!"
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: macforge-build-artifacts
        path: |
          DesktopApp/build/
          DesktopApp/*.xcarchive
        retention-days: 7
    
    - name: Show build summary
      if: always()
      run: |
        echo "=== BUILD SUMMARY ==="
        echo "Build artifacts created in DesktopApp/build/"
        echo "Archive created: DesktopApp/build/MacForge.xcarchive"
        echo "====================="