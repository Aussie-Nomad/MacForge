name: Build and Test MacForge

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Xcode
      uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: 'latest-stable'
    
    - name: Show Xcode version
      run: |
        echo "Xcode version:"
        xcodebuild -version
    
    - name: Show project structure
      run: |
        echo "Current directory: $(pwd)"
        echo "Repository contents:"
        ls -la
        echo ""
        echo "DesktopApp contents:"
        ls -la DesktopApp/ || echo "DesktopApp directory not found"
    
    - name: List available schemes
      working-directory: DesktopApp
      run: |
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          echo "Available schemes:"
          xcodebuild -project MacForge.xcodeproj -list
        elif [ -f "MacForge.xcworkspace/contents.xcworkspacedata" ]; then
          echo "Available schemes:"
          xcodebuild -workspace MacForge.xcworkspace -list
        else
          echo "No Xcode project or workspace found"
          exit 1
        fi
    
    - name: Clean build folder
      working-directory: DesktopApp
      run: |
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild -project MacForge.xcodeproj -scheme MacForge clean
        elif [ -f "MacForge.xcworkspace/contents.xcworkspacedata" ]; then
          xcodebuild -workspace MacForge.xcworkspace -scheme MacForge clean
        fi
    
    - name: Build project
      working-directory: DesktopApp
      run: |
        echo "Building MacForge project..."
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild -project MacForge.xcodeproj -scheme MacForge -destination 'platform=macOS' -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO build
          echo "Build completed successfully!"
        elif [ -f "MacForge.xcworkspace/contents.xcworkspacedata" ]; then
          xcodebuild -workspace MacForge.xcworkspace -scheme MacForge -destination 'platform=macOS' -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO build
          echo "Build completed successfully!"
        else
          echo "No Xcode project or workspace found in DesktopApp directory"
          ls -la
          exit 1
        fi
    
    - name: Build project (Release)
      working-directory: DesktopApp
      run: |
        echo "Building MacForge project (Release)..."
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild -project MacForge.xcodeproj -scheme MacForge -destination 'platform=macOS' -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO build
          echo "Release build completed successfully!"
        elif [ -f "MacForge.xcworkspace/contents.xcworkspacedata" ]; then
          xcodebuild -workspace MacForge.xcworkspace -scheme MacForge -destination 'platform=macOS' -configuration Release CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO build
          echo "Release build completed successfully!"
        else
          echo "No Xcode project or workspace found in DesktopApp directory"
          exit 1
        fi
    
    - name: Run tests (if available)
      working-directory: DesktopApp
      run: |
        echo "Running tests..."
        if [ -f "MacForge.xcodeproj/project.pbxproj" ]; then
          xcodebuild -project MacForge.xcodeproj -scheme MacForge -destination 'platform=macOS' -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO test
          echo "Tests completed successfully!"
        elif [ -f "MacForge.xcworkspace/contents.xcworkspacedata" ]; then
          xcodebuild -workspace MacForge.xcworkspace -scheme MacForge -destination 'platform=macOS' -configuration Debug CODE_SIGN_IDENTITY="" CODE_SIGNING_REQUIRED=NO CODE_SIGNING_ALLOWED=NO test
          echo "Tests completed successfully!"
        else
          echo "No tests to run"
        fi
      continue-on-error: true
